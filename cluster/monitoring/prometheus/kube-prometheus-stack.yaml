---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 14.3.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  # dependsOn:
  # - name: sealed-secrets
  #   namespace: kube-system
  timeout: 20m
  values:
    server:
      resources:
        requests:
          memory: 1000Mi
          cpu: 25m
        limits:
          memory: 2000Mi
    prometheusOperator:
      createCustomResource: false
    nodeExporter:
      serviceMonitor:
        relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
          - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node
    grafana:
      deploymentStrategy:
        type: Recreate
      persistence:
        enabled: true
        storageClassName: "rook-ceph-block"
        size: 7Gi
      env:
        GF_EXPLORE_ENABLED: true
        GF_PANELS_DISABLE_SANITIZE_HTML: true
        GF_LOG_FILTERS: rendering:debug
      sidecar:
        datasources:
          enabled: true
          # Disable for thanos
          #defaultDatasourceEnabled: false
        dashboards:
          enabled: true
          searchNamespace: ALL
      plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
      - https://github.com/panodata/grafana-map-panel/releases/download/0.15.0/grafana-map-panel-0.15.0.zip;grafana-worldmap-panel-ng
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            allowUiUpdates: true
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: teslamate
            orgId: 1
            folder: Teslamate
            type: file
            disableDeletion: false
            editable: true
            isDefault: false
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/teslamate
      dashboards:
        default:
          # Ref: https://grafana.com/grafana/dashboards/2842
          ceph-cluster:
            gnetId: 2842
            revision: 14
            datasource: Prometheus
          # Ref: https://grafana.com/grafana/dashboards/5336
          ceph-osd:
            gnetId: 5336
            revision: 5
            datasource: Prometheus
          # Ref: https://grafana.com/grafana/dashboards/5342
          ceph-pools:
            gnetId: 5342
            revision: 5
            datasource: Prometheus
          # Ref: https://grafana.com/grafana/dashboards/13165
          # Alt: https://grafana.com/grafana/dashboards/12541
          traefik:
            gnetId: 13165
            revision: 1
            datasource: Prometheus
          #Ref: https://grafana.com/grafana/dashboards/13537
          cilium-dashboard:
            gnetId: 13537
            revision: 1
            datasource: Prometheus
          #Ref: https://grafana.com/grafana/dashboards/13538
          cilium-operator-dashboard:
            gnetId: 13538
            revision: 1
            datasource: Prometheus
          #Ref: https://grafana.com/grafana/dashboards/13539
          hubble-dashboard:
            gnetId: 13539
            revision: 1
            datasource: Prometheus
        network:
          #TODO: https://github.com/ebrianne/adguard-exporter (https://grafana.com/grafana/dashboards/13330 )
          # Ref: https://grafana.com/grafana/dashboards/11315
          unifi-client-insights:
            gnetId: 11315
            revision: 8
            datasource: Prometheus
          # Ref: https://grafana.com/grafana/dashboards/11311
          unifi-network-sites:
            gnetId: 11311
            revision: 4
            datasource: Prometheus
          # Ref: https://grafana.com/grafana/dashboards/11314
          unifi-uap-insights:
            gnetId: 11314
            revision: 9
            datasource: Prometheus
          # Ref: https://grafana.com/grafana/dashboards/12023
          pfsense:
            gnetId: 12023
            revision: 1
            datasource: Influxdb
        teslamate:
          charge-level:
            url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.21.2/grafana/dashboards/charge-level.json
            # datasource: TeslaMate
          charges:
            url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.21.2/grafana/dashboards/charges.json
            # datasource: TeslaMate
          charging-stats:
            url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.21.2/grafana/dashboards/charging-stats.json
            # datasource: TeslaMate
          drive-stats:
            url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.21.2/grafana/dashboards/drive-stats.json
            # datasource: TeslaMate
          drives:
            url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.21.2/grafana/dashboards/drives.json
            # datasource: TeslaMate
          efficiency:
            url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.21.2/grafana/dashboards/efficiency.json
            # datasource: TeslaMate
          locations:
            url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.21.2/grafana/dashboards/locations.json
            # datasource: TeslaMate
          mileage:
            url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.21.2/grafana/dashboards/mileage.json
            # datasource: TeslaMate
          overview:
            url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.21.2/grafana/dashboards/overview.json
            # datasource: TeslaMate
          projected-range:
            url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.21.2/grafana/dashboards/projected-range.json
            # datasource: TeslaMate
          states:
            url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.21.2/grafana/dashboards/states.json
            # datasource: TeslaMate
          trip:
            url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.21.2/grafana/dashboards/trip.json
            # datasource: TeslaMate
          updates:
            url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.21.2/grafana/dashboards/updates.json
            # datasource: TeslaMate
          vampire-drain:
            url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.21.2/grafana/dashboards/vampire-drain.json
            # datasource: TeslaMate
          visited:
            url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.21.2/grafana/dashboards/visited.json
            # datasource: TeslaMate
          charge-details:
            url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.21.2/grafana/dashboards/internal/charge-details.json
          drive-details:
            url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.21.2/grafana/dashboards/internal/drive-details.json
      #additionalDataSources:
      #- name: Prometheus
      #  type: prometheus
      #  access: proxy
      #  url: http://thanos-query-http:10902/
      #  isDefault: false
      #- name: Loki
      #  type: loki
      #  access: proxy
      #  url: http://loki:3100
      grafana.ini:
        paths:
          data: /var/lib/grafana/data
          logs: /var/log/grafana
          plugins: /var/lib/grafana/plugins
          provisioning: /etc/grafana/provisioning
        analytics:
          check_for_updates: true
        log:
          mode: console
        grafana_net:
          url: https://grafana.net
    kubeEtcd:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
    kubelet:
      serviceMonitor:
        metricRelabelings:
        - action: replace
          sourceLabels:
          - node
          targetLabel: instance
    prometheus:
      prometheusSpec:
        podAntiAffinity: "hard"
        ruleSelector: {}
        ruleNamespaceSelector: {}
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
        podMonitorNamespaceSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        retention: 24h
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: "rook-ceph-block"
              resources:
                requests:
                  storage: 10Gi
        #thanos:
        #  image: quay.io/thanos/thanos:v0.17.2
        #  version: v0.17.2
          #objectStorageConfig:
          #  name: thanos
          #  key: object-store.yaml
        #additionalScrapeConfigs:
        #- job_name: 'node-exporter'
        #  static_configs:
        #  - targets:
        #    - 192.168.1.1:9100
        #    - 192.168.1.39:9100
        #    - 192.168.1.40:9100
  valuesFrom:
    - kind: Secret
      name: kube-prometheus-stack-helm-values